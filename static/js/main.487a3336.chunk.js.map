{"version":3,"sources":["components/top-menu/top-menu.component.jsx","components/bar/bar.component.jsx","components/visualizer/visualizer.component.jsx","store/selectionSort/actions.js","store/settings/actions.js","algorithm/selectionSort.js","components/control-bar/control-bar.component.jsx","App.js","serviceWorker.js","store/selectionSort/reducer.js","helpers/generateValuesArray/index.js","store/settings/reducer.js","store/root-reducer.js","store/store.js","index.js"],"names":["TopMenu","className","Button","variant","color","onClick","Bar","height","currentJ","currentLower","swap","sorted","style","backgroundColor","connect","state","dataArray","settingReducer","selectionSortReducer","isSorted","isRunning","map","value","index","key","includes","do_update_j","newJ","type","payload","do_update_lower","lower","set_running","set_sorted","selectionSort","array","speed","dispatch","arr","slice","DispatchSignal","i","length","lowest","j","push","action","temp","doSelectionSort","runDispatch","shift","update_array","setTimeout","arrayLength","sort","setArray","setArrayLength","set_array_length","setSpeed","disabled","TextField","onChange","event","target","updateLength","size","Slider","min","max","updateSpeed","valueLabelDisplay","aria-labelledby","App","Boolean","window","location","hostname","match","INITIAL_STATE","currentI","sortReducer","start","generateValuesArray","Math","floor","random","sortAlgo","rootReducer","combineReducers","middleWare","logger","store","createStore","applyMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.487a3336.chunk.js","sourcesContent":["import React from 'react';\nimport { Button } from '@material-ui/core';\n\nimport './top-menu.styles.css';\nconst TopMenu = () => {\n    return (\n        <div className='topMenu'>\n            <div className='topMen__logo'><span> Visuale Sort </span></div>\n            <div className='topMen__items'>\n                <Button variant=\"contained\" color=\"primary\" onClick=''> Selection Sort </Button>\n                <Button variant=\"contained\" color=\"primary\" onClick=''> Quick Sort </Button>\n                <Button variant=\"contained\" color=\"primary\" onClick=''> Insertion Sort </Button>\n            </div>\n        </div>\n    );\n}\n\nexport default TopMenu;","import React from 'react'\nimport './bar.style.css';\n\nconst Bar = ({ height, currentJ, currentLower, swap, sorted }) => {\n\n    const style = {\n        height: `${height*20}px`,\n        backgroundColor: swap ? 'blue' : currentJ ? 'red' : currentLower ? 'yellow' : sorted ? 'rgb(82, 188, 105)' : 'rgb(173, 216, 230)'\n    }\n    const active_classess = 'bar'; \n    return (\n        <div className={active_classess} style={style}></div>\n    );\n}\nexport default Bar;","import React from 'react';\nimport { connect } from 'react-redux';\nimport Bar from './../bar/bar.component';\nimport './visualizer.css';\n\nconst SortVisualizer = ({dataArray, currentJ, swap, currentLower, isSorted, isRunning}) =>  {\n   \n    return (\n        <div className='visualizer-container'>\n            {\n                dataArray.map( (value, index) => (\n                    <Bar key={index} \n                        height={value}\n                        currentJ={currentJ === index && !isSorted && isRunning ? true : false}\n                        currentLower={currentLower === index && !isSorted && isRunning ? true : false}\n                        swap={swap.includes(index) ? true : false}\n                        sorted={isSorted}\n                    />\n                ))\n            }\n        </div>\n)}\n\nconst mapStateToProps = state => ({\n    dataArray: state.settingReducer.dataArray,\n    currentJ: state.selectionSortReducer.currentJ,\n    currentLower: state.selectionSortReducer.currentLower,\n    swap: state.selectionSortReducer.swap,\n    isSorted: state.settingReducer.isSorted,\n    isRunning: state.settingReducer.isRunning\n});\n\n\nexport default connect(mapStateToProps)(SortVisualizer);","export const do_select_sort = () => ({\n    type: 'DO_SORT_SELECTION'\n});\n\nexport const do_start_sort = () => ({\n    type: 'DO_START_SORT'\n});\n\nexport const do_update_j =  newJ => ({\n    type: 'UPDATE_J',\n    payload: newJ,\n});\n\nexport const do_update_lower = lower => ({\n    type: 'UPDATE_LOWER',\n    payload: lower,\n});\n\nexport const do_swap = swap => ({\n    type: 'SWAP_OP',\n    payload: swap,\n});\n\n","export const update_array = array => ({\n    type: 'UPDATE_ARRAY',\n    payload: array\n});\n\nexport const set_array = array => ({\n    type: 'SET_ARRAY',\n    payload: array\n});\n\nexport const set_array_length = length => ({\n    type: 'SET_ARRAY_LENGTH',\n    payload: length\n});\n\nexport const set_running = value => ({\n    type: 'SET_RUNNING',\n    payload: value\n});\n\nexport const set_sorted = value => ({\n    type: 'SET_SORTED',\n    payload: value\n});\n\nexport const set_speed = value => ({\n    type: 'SET_SPEED',\n    payload: value\n});\n","import { do_update_j, do_update_lower, do_swap } from '../store/selectionSort/actions';\nimport { update_array, set_sorted, set_running } from '../store/settings/actions';\n\nfunction selectionSort(array, speed, dispatch) {\n    let arr = array.slice(0);\n    let DispatchSignal = [];\n    doSelectionSort(arr, DispatchSignal);\n    runDispatch(arr, DispatchSignal, speed, dispatch);  \n    return arr;  \n}\n\nfunction doSelectionSort(arr, DispatchSignal) {\n    for ( var i = 0; i < arr.length; i++ ) {\n        var lowest = i;\n        for ( var j = i+1; j < arr.length; j++ ) {\n            if (arr[j] < arr[lowest]) {\n                lowest = j; \n                DispatchSignal.push({ action:'UPDATE_LOWER', value:lowest });\n                DispatchSignal.push({ action:'UPDATE_ARRAY', value: arr.slice(0) });\n            }\n            DispatchSignal.push({ action:'UPDATE_J', value:j});\n        }\n        if ( i !== lowest ) {\n            //SWAP!\n            var temp = arr[i];\n            arr[i] = arr[lowest];\n            arr[lowest] = temp;\n            DispatchSignal.push({ action:'SWAP_OP', value:[i,lowest] });\n            DispatchSignal.push({ action:'SWAP_OP', value:[] });\n            DispatchSignal.push({ action:'UPDATE_ARRAY', value: arr.slice(0) });\n        }\n    }\n}\n\nfunction runDispatch(array, DispatchSignal, speed, dispatch) {\n    if (!DispatchSignal.length) {\n        dispatch(set_running(false));\n        dispatch(do_update_j(0));\n        dispatch(do_update_lower(0));\n        dispatch(set_sorted(true));\n        return;\n    } \n   \n    let action = DispatchSignal.shift();\n\n    switch (action.action) {\n        case 'UPDATE_J':\n                dispatch(do_update_j(action.value))\n            break;\n        case 'UPDATE_LOWER':\n                dispatch(do_update_lower(action.value))\n            break;\n        case 'SWAP_OP':\n                dispatch(do_swap(action.value))\n            break;\n        case 'UPDATE_ARRAY':\n                dispatch(update_array(action.value))\n            break;\n            default:\n    }\n    setTimeout(() => {\n        runDispatch(array, DispatchSignal, speed, dispatch);\n    }, speed);\n}\n\nexport default selectionSort;","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport selectionSort  from  './../../algorithm/selectionSort';\nimport { set_array, set_array_length, set_running, set_sorted, set_speed } from '../../store/settings/actions';\nimport { Button, TextField, Slider } from '@material-ui/core';\n\nimport './control-bar.styles.css';\n\nconst ControlBar = ({sort ,dataArray, arrayLength, setArrayLength, setSpeed, setArray, isRunning, speed}) => {\n\n    function updateLength(event) {\n        setArrayLength(event.target.value);\n    }\n\n    function updateSpeed(value) {\n        setSpeed(value);\n    }\n\n    return (\n        <div className='control-bar'>\n            <div className=\"control-bar__section\">\n                <Button disabled={isRunning} onClick={ () => setArray(arrayLength) } variant=\"contained\" color=\"primary\"> Generate New </Button>\n                <TextField type=\"text\" value={arrayLength} onChange={ event => updateLength(event)} variant=\"outlined\" size=\"small\"/>\n            </div>\n            <div className=\"control-bar__section\">\n                <h3>  Speed : {speed} </h3>\n                <Slider\n                    min={1}\n                    max={1000}\n                    value={speed}\n                    onChange={(event, value) => updateSpeed(value)}\n                    valueLabelDisplay=\"auto\"\n                    aria-labelledby=\"range-slider\"\n                />\n           </div>\n           <div className=\"control-bar__section\">\n                <Button disabled={isRunning} onClick={() => sort(dataArray, speed)} variant=\"contained\" color=\"primary\"> Start </Button>\n           </div>         \n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    dataArray: state.settingReducer.dataArray,\n    arrayLength: state.settingReducer.arrayLength,\n    isRunning: state.settingReducer.isRunning,\n    isSorted: state.settingReducer.isSorted,\n    speed: state.settingReducer.speed\n});\n\nconst mapDispatchToProps = dispatch => ({\n    sort: (dataArray, speed) => {\n        dispatch(set_running(true));\n        selectionSort(dataArray,speed, dispatch);\n    },\n    setArray: length => {\n        dispatch(set_array(length));\n        dispatch(set_sorted(false))\n    },\n    setArrayLength: length => dispatch(set_array_length(length)),\n    setSpeed: speed => dispatch(set_speed(speed)) \n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ControlBar);","import React from 'react';\n\nimport './App.css';\nimport TopMenu from './components/top-menu/top-menu.component';\nimport SortVisualizer from './components/visualizer/visualizer.component';\nimport ControlBar from './components/control-bar/control-bar.component';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <TopMenu/>\n        <ControlBar/>\n        <SortVisualizer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\nconst INITIAL_STATE = {\n    lower : 0,\n    currentI:0,\n    currentJ:0,\n    currentLower:0,\n    swap: [],\n}\n\nconst sortReducer = ( state = INITIAL_STATE, action ) => {\n    switch (action.type) {\n        case 'DO_START_SORT':\n            return {\n                ...state,\n                start: !state.start,\n            }\n        case 'UPDATE_J':\n            return {\n                ...state,\n                currentJ:action.payload,\n            }\n        case 'UPDATE_LOWER':\n            return {\n                ...state,\n                currentLower:action.payload,\n            }\n        case 'SWAP_OP':\n            return {\n                ...state,\n                swap:action.payload,\n            }\n        default:\n            return state\n    }\n}\n\nexport default sortReducer;\n","const generateValuesArray = size => {\n    let array = [];\n    while (array.length < size) {\n        array.push(Math.floor(Math.random() * 12) + 12);\n    }\n    return array\n}\nexport default generateValuesArray;","import generateValuesArray from '../../helpers/generateValuesArray';\n\nconst INITIAL_STATE = {\n    dataArray: generateValuesArray(30),\n    arrayLength: 30,\n    sortAlgo: '',\n    isRunning: false,\n    isSorted: false,\n    speed: 50\n}\n\nconst settingReducer = ( state = INITIAL_STATE, action ) => {\n    switch (action.type) {\n        case 'SET_ARRAY':\n            return {\n                ...state,\n                dataArray: generateValuesArray(action.payload)    \n            }\n        case 'UPDATE_ARRAY':\n            return {\n                ...state,\n                dataArray: action.payload    \n            }  \n        case 'SET_ARRAY_LENGTH':\n            return {\n                ...state,\n                arrayLength: action.payload\n            }\n        case 'SET_RUNNING':\n            return {\n                ...state,\n                isRunning:action.payload\n            }\n        case 'SET_SORTED':\n            return {\n                ...state,\n                isSorted:action.payload\n            }\n        case 'SET_SPEED':\n            return {\n                ...state,\n                speed:action.payload\n            }\n        default:\n            return state;\n    }\n}\nexport default settingReducer;","import { combineReducers } from 'redux';\n\nimport selectionSortReducer from './selectionSort/reducer';\nimport settingReducer from './settings/reducer';\n\nconst rootReducer = combineReducers({\n    settingReducer,\n    selectionSortReducer\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport rootReducer from './root-reducer';\n\nconst middleWare = [logger];\n\nconst store = createStore(rootReducer, applyMiddleware(...middleWare));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    ,document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}